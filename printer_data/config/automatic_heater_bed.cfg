[gcode_macro HEATERBED_SELECT]
description: Automatically select which bed heater to use on the Elegoo Neptune 4 Pro | Params: SIZE, TEMP, SOAK(0)
gcode:
    # Params
    {% set fl_size = params.SIZE|string %}

    {% set center_x_min = ((230 / 2) - (120 / 2)) %}
    {% set center_y_min = ((230 / 2) - (120 / 2)) %}
    {% set center_x_max = ((230 / 2) + (120 / 2)) %}
    {% set center_y_max = ((230 / 2) + (120 / 2)) %}

    {% if fl_size is defined and fl_size != "0_0_0_0" %}
        {action_respond_info("Got a SIZE parameter for the object being printed")}

        {% set print_x_min, print_y_min, print_x_max, print_y_max = fl_size.split('_')|map('trim')|map('float') %}

        {% set x_print_size = (print_x_max - print_x_min) %}
        {% set y_print_size = (print_y_max - print_y_min) %}

        # Figure out if the print resides outside of the inner bed
        {% if print_x_min < center_x_min or print_y_min < center_y_min or print_x_max > center_x_max or print_y_max > center_y_max %}
            {action_respond_info("Large print detected as it resides outside 120x120 (%sx%s)" % (x_print_size|int, y_print_size|int)) }

            SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=small_print VALUE=False
        {% else %}
            # Only heat inner bed
            {action_respond_info("Small print detected as it resides inside 120x120(%sx%s)" % (x_print_size|int, y_print_size|int)) }

            SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=small_print VALUE=True

        {% endif %}
    {% else %}
        # If all else fails lets treat as a large print by default
        {action_respond_info("Print size was not passed! Treating as large print.") }

        SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=small_print VALUE=False
    {% endif %}

[gcode_macro SET_BED_TEMPERATURE]
gcode:
    # Params
    {% set bedtemp = params.TEMP|int %}
    {% set soaktime = params.SOAK|default(0)|int %}

    {% set small_print = printer["gcode_macro PRINT_START"].small_print %}
    {% set heater_bed = printer["heater_bed"] %}
    {% set heater_bed_outer = printer["heater_generic heater_bed_outer"] %}

    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={bedtemp}
    {% if not small_print %}
      SET_HEATER_TEMPERATURE HEATER=heater_bed_outer TARGET={bedtemp}
    {% endif %}

    {action_respond_info("Set bed temp to %s.0f C. Continuing..." % (bedtemp)) }

[gcode_macro BED_TEMPERATURE_WAIT]
gcode:
    # Params
    {% set bedtemp = params.TEMP|int %}
    {% set soaktime = params.SOAK|default(0)|int %}

    {% set small_print = printer["gcode_macro PRINT_START"].small_print %}
    {% set heater_bed = printer["heater_bed"] %}
    {% set heater_bed_outer = printer["heater_generic heater_bed_outer"] %}

    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={bedtemp}
    {% if not small_print %}
      SET_HEATER_TEMPERATURE HEATER=heater_bed_outer TARGET={bedtemp}
    {% endif %}

    {% if (small_print and heater_bed.temperature|int >= (bedtemp - 1)) or
          (not small_print and heater_bed.temperature|int >= (bedtemp - 1) and heater_bed_outer.temperature|int >= (bedtemp - 1)) %}
        {action_respond_info("Bed already at set temp. Continuing...") }
    {% elif soaktime > 0 %}
        {action_respond_info("Set bed temp to %s.0f C. Soaking for %s min..." % (bedtemp, soaktime)) }

        PARKBED
        SET_EXTRUDER_CONT TEMP=150
        WAIT S={soaktime * 60}
    {% endif %}