#####################################################################
#       PRINT START END CANCEL PAUSE RESUME PURGE
#####################################################################

[gcode_macro PRINT_START]
variable_small_print: False
gcode:
    {action_respond_info("Running PRINT START...")}

    # Params
    {% set bed_plate = params.PLATE|default("smooth")|string %}
    {% set bedtemp = params.BED|int %}
    {% set hotendtemp = params.EXTRUDER|int %}
    {% set fl_size = params.SIZE|default("0_0_0_0")|string %}
    {% set offset = params.ZOFFSET|default(0)|float %}
    
    SET_BEACON_MODEL PLATE={bed_plate}                                                                                  # Select proper Beacon plate model
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=small_print VALUE=False
    HEATERBED_SELECT SIZE={fl_size}                                                                                     # Determine which heater beds are needed
    BED_MESH_CLEAR

    SET_BED_TEMPERATURE TEMP={bedtemp}                                                                                  # Start heating the bed
    SET_EXTRUDER_CONT TEMP=150                                                                                          # Start heating the extruder

    CG28                                                                                                                # Home printer if not yet homed
    G21                                                                                                                 # Set units to mm
    G90                                                                                                                 # Use absolute coordinates
    M83                                                                                                                 # Relative extruder positioning
    # G1 Z4.0 F3000                                                                                                       # Move Z Axis up
    G92 E0.0                                                                                                            # Reset extruder distance position

    PARKBED
    SET_BEACON_MINIMUM TEMP=46                                                                                            # Wait for Beacon to reach desired temp
    # BED_TEMPERATURE_WAIT TEMP={bedtemp} SOAK=10                                                                         # Wait for bed temp only if they are not already at temp. Soak for 10 min if they are not at temp.

    G28 Z
    Z_TILT_ADJUST                                                                                                       # Ensure x gantry is level
    BED_MESH_CALIBRATE ADAPTIVE=1                                                                                      # Create a bed mesh that is whithin the bounds of the print
    
    PARKBED

    SET_EXTRUDER_WAIT TEMP={hotendtemp}                                                                                 # Wait for hotend temp

    SKEW_PROFILE LOAD=CaliFlower
    
    Part_Light_ON                                                                                                       # Turn on extruder LED
    START_TUNE                                                                                                          
    LINE_PURGE                                                                                                          # Start purge line
    SFS_ENABLE

    {action_respond_info("Starting print...")}

[gcode_macro PRINT_END]
gcode:
    {action_respond_info("Running PRINT END...")}

    Part_Light_OFF                                                                                                      # Turn off extruder LED

    G91                                                                                                                 # Relative positioning
    G1 E-2 F2700                                                                                                        # Retract a bit
    G1 E-2 Z0.2 F1600                                                                                                   # Retract and raise Z
    G1 X5 Y5 F3000                                                                                                      # Wipe out
    G1 Z2                                                                                                               # Raise Z more
    G90                                                                                                                 # Absolute positioning
    G1 X0 Y{printer.toolhead.axis_maximum.y}                                                                            # Present print

    M106 S0                                                                                                             # Turn off print cooling fan
    END_TUNE
    TURN_OFF_HEATERS                                                                                                    # Turn off heater beds and hotend

    BED_MESH_CLEAR                                                                                                      # Clear current bed mesh
    BED_MESH_PROFILE REMOVE=default                                                                                     # Remove bed mesh from config
    SET_SKEW CLEAR=1
    SFS_DISABLE

    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}                                         # Start idle timeout

[gcode_macro CANCEL_PRINT]
rename_existing: CANCEL_PRINT_BASE
gcode:
    {action_respond_info("Running CANCEL PRINT...")}

    CLEAR_PAUSE

    CANCEL_PRINT_BASE                                                                                                   # Cancel print
    
    Part_Light_OFF                                                                                                     # Turn off extruder LED

    G91                                                                                                                 # Relative positioning
    G1 E-2 F2700                                                                                                        # Retract a bit
    G1 E-2 Z0.2 F1600                                                                                                   # Retract and raise Z
    G1 X5 Y5 F3000                                                                                                      # Wipe out
    G1 Z2                                                                                                               # Raise Z more
    G90                                                                                                                 # Absolute positioning
    G1 X0 Y{printer.toolhead.axis_maximum.y}                                                                            # Present print

    M106 S0                                                                                                             # Turn off print cooling fan
    TURN_OFF_HEATERS                                                                                                    # Turn off heater beds and hotend
    SET_SKEW CLEAR=1
    SFS_DISABLE

    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}                                         # Start idle timeout

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    {action_respond_info("Running PAUSE...")}

    PAUSE_TUNE

    # Params
    {% set z = params.Z|default(10)|int %}                                                                              # Amount to lift z
  
    {% if printer['pause_resume'].is_paused|int == 0 %}		
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                                                         # Set zhop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}                               # Set hotend temp variable for reference in resume macro
        SFS_DISABLE
        SAVE_GCODE_STATE NAME=PAUSE                                                                                     # Save current print position for resume

        BASE_PAUSE                                                                                                      # Pause print
        G91                                                                                                             # Relative positioning

        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}                                  # Check that zhop doesn't exceed z max
            G1 E-2 F2700                                                                                                # Retract 2mm
            G1 X3 Y3 F3000                                                                                              # Wipe out 
            G1 E-2 Z{z} F1600                                                                                           # Retract 2mm more & raise z by z hop amount 
        {% else %}
            { action_respond_info("PAUSE: Pause zhop exceeds maximum Z height.") }                                      # If z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
            G1 E-2 F2700                                                                                                # Retract 2mm
            G1 X3 Y3 F3000                                                                                              # Wipe out 
            G1 E-2 F1600                                                                                                # Retract 2mm more
        {% endif %}

        G90                                                                                                             # Absolute positioning
        G1 X{printer.toolhead.axis_minimum.x+1} Y{printer.toolhead.axis_maximum.y-20} F6000                             # Park toolhead at the rear left of the bed
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                                                 # Save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET=160                                                               # Cool down hotend to no-drip temp
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                                                  # Set timeout to 12 hours
    {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    {action_respond_info("Running RESUME...")}

    # Params
    {% set e = params.E|default(2)|int %}
  
    {% if printer['pause_resume'].is_paused|int == 1 %}
        SFS_ENABLE
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}                                     # Set timeout back to configured value

        {% if etemp > 0 %}
            SET_EXTRUDER_WAIT TEMP={etemp|int}                                                                          # Wait for hotend to heat back up
        {% endif %}

        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=450                                                        # Go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
        G91                                                                                                             # Relative positioning
        M83                                                                                                             # Relative extruder positioning
        
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
            G1 Z{zhop * -1} E{e} F900                                                                                   # Prime nozzle by E, lower Z back down
        {% else %}
            G1 Z{zhop * -1} F900                                                                                        # Lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}

        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=450                                                            # Restore position
        BASE_RESUME                                                                                                     # Resume print
    {% endif %}

# [gcode_macro PURGE_LINE]
# description: Extrude a purge line | Params: NONE
# gcode:
#     {action_respond_info("Running Purge line...")}

#     SAVE_GCODE_STATE NAME=PURGE_LINE
#     G90                                                                                                                 # Absolute positioning
#     M83                                                                                                                 # Relative extruder positioning
#     G1 X1.1 Y20 Z0.28 F5000.0                                                                                           # Move to start position
#     G1 X1.1 Y80.0 Z0.28 F1500.0 E10                                                                                     # Draw the first line
#     G1 X1.4 Y80.0 Z0.28 F5000.0                                                                                         # Move to side a little
#     G1 X1.4 Y20 Z0.28 F1500.0 E20                                                                                       # Draw the second line
#     G1 Z2.0 F3000                                                                                                       # Move Z Axis up
#     G92 E0.0                                                                                                            # Reset extruder distance position

#####################################################################
#       CONDITIONAL HOMING
#####################################################################

[gcode_macro CG28]
description: Conditionally home XYZ if has not been homed before | Params: NONE
gcode:
    {action_respond_info("Conditional G28 has been called...")}

    {% if "xyz" not in printer.toolhead.homed_axes %}                                                                   # Check if printer has been homed
        {action_respond_info("Doing a full G28 as the printer has not been homed before.")}
        G28                                                                                                             # Home all axes
    {% else %}
        {action_respond_info("Printer already homed.")}
    {% endif %}

#####################################################################
#       FILAMENT
#####################################################################
[gcode_macro SFS_DISABLE]
description: Disable smart filament sensor | Param: None
gcode:
    {action_respond_info("DISABLING the Smart Filament Sensor...")}
    G92 E0
    SET_FILAMENT_SENSOR SENSOR=filament_motion ENABLE=0

[gcode_macro SFS_ENABLE]
description: Enable smart filament sensor | Param: None
gcode:
    {action_respond_info("ENABLING the Smart Filament Sensor...")}
    G92 E0
    SET_FILAMENT_SENSOR SENSOR=filament_motion ENABLE=1

[gcode_macro UNLOAD_FILAMENT]
description: Unload filament from extruder | Params: None
gcode:
    {action_respond_info("Unloading filament...")}

    SAVE_GCODE_STATE NAME=UNLOADFILAMENT

    M83                                                                                                                 # Set extruder to relative
    G1 E10 F600                                                                                                         # Extrude a little to soften tip 
    G1 E-100 F900                                                                                                       # Retract filament completely
    SFS_DISABLE
    
    RESTORE_GCODE_STATE NAME=UNLOADFILAMENT

[gcode_macro LOAD_FILAMENT]
description: Load filament intro extruder | Params: DISTANCE(80)
gcode:
    # Params
    {% set DISTANCE = params.DISTANCE|default(80)|float %}

    {action_respond_info("Loading filament...")}
    
    SAVE_GCODE_STATE NAME=LOADFILAMENT

    M83                                                                                                                 # Set extruder to relative
    G1 E{DISTANCE} F450                                                                                                 # Extrude distance
    G1 E-.75                                                                                                            # Retract a little
    SFS_DISABLE

    RESTORE_GCODE_STATE NAME=LOADFILAMENT

[gcode_macro M600]
description: Call for filament change | Params: None
gcode:
    {action_respond_info("Filament change %(M600%) called.") }

    PAUSE
    UNLOAD_FILAMENT                                                                                                             # Pause print

#####################################################################
#       SET TEMPERATURES
#####################################################################

[gcode_macro SET_EXTRUDER_WAIT]
description: Set extruder temperature and wait till it's reached | Params: TEMP
gcode:
    # Params
    {% set hotendtemp = params.TEMP|int %}
    
    {action_respond_info("Setting EXTRUDER temp to %.0f C and WAITING..." % (hotendtemp))}

    M109 S{hotendtemp}                                                                                                  # Set and wait for hotend temp

[gcode_macro SET_EXTRUDER_CONT]
description: Set extruder temperature and continue | Params: TEMP
gcode:
    # Params
    {% set hotendtemp = params.TEMP|int %}
    
    {action_respond_info("Setting EXTRUDER temp to %.0f C and CONTINUING..." % (hotendtemp))}

    M104 S{hotendtemp}                                                                                                  # Set hotend temp

[gcode_macro M109]
rename_existing: M99109
description: Update "Wait for Hotend Temperature" to include acceptable buffer | Params: S
gcode:
    #Params
    {% set s = params.S|float %}

    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}                                                     # Set hotend temp

    {% if s != 0 %}                                                                                                     # Check if hotend is being turned off
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s-4} MAXIMUM={s+10}                                                   # Wait for the hotend to be within -4 and +20 of desired temp
    {% endif %}

[gcode_macro SET_BEACON_MINIMUM]
description: Wait for the Beacon to be a minimum desired temperature | Params: TEMP
gcode:
    #Params
    {% set desired_temp = params.TEMP|int %}
    {% set current_temp = printer["temperature_sensor beacon_coil"].temperature %}

    {% if current_temp < (desired_temp - 1) %}
        {action_respond_info("WAITING for Beacon to reach %.0f C..." % (desired_temp))}
        TEMPERATURE_WAIT SENSOR="temperature_sensor beacon_coil" MINIMUM={desired_temp}
    {% else %}
        {action_respond_info("Beacon already at desired temp, CONTINUING...")}
    {% endif %}


#####################################################################
#       PARKING
#####################################################################

[gcode_macro PARKBED]
description: Park the extruder at home_xy_position Z at 2mm | Params: None
gcode:
    {action_respond_info("Parking EXTRUDER at home_xy_position Z at 2mm...")}

    CG28         
    
    SAVE_GCODE_STATE NAME=PARKBED
    G90                                                                                                                 # Use absolute coordinates
    G0 X115 Y95 Z2 F19500                                                                                              # Center the extruder 10mm above the bed
    # G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z10 F19500                             # Center the extruder 10mm above the bed
    RESTORE_GCODE_STATE NAME=PARKBED

[gcode_macro PARKPURGE]
description: Park the extruder at near the brush to purge | Params: None
gcode:
    {action_respond_info("Parking EXTRUDER over the purge location at 5mm...")}
    CG28
    SAVE_GCODE_STATE NAME=PARKPURGE
    G90 
    G0 X-9 Y50 Z5 F6000                                     
    RESTORE_GCODE_STATE NAME=PARKPURGE

#####################################################################
#       MATERIAL PREHEAT
#####################################################################

[gcode_macro PREHEAT_PLA]
description: Preheat PLA
gcode:
    {% if printer['print_stats'].state == 'printing' %}
        {action_respond_info("PREHEAT: Printer is printing!!! Aborting!!!")}
    {% else %}
        {action_respond_info("PREHEAT: PLA...")}

        SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=small_print VALUE=True

        SET_EXTRUDER_CONT TEMP=150                                                                                      # Set extruder temp to 0
        SET_BED_TEMPERATURE TEMP=60
        CG28                                                                                                            # Make sure the printer has been homed
        PARKBED                                                                                                         # Move the extruder to center of bed
        SET_IDLE_TIMEOUT TIMEOUT=10800                                                                                  # Set timeout to 3 hours
    {% endif %}

[gcode_macro PREHEAT_PLA_FULL]
description: Preheat PLA
gcode:
    {% if printer['print_stats'].state == 'printing' %}
        {action_respond_info("PREHEAT: Printer is printing!!! Aborting!!!")}
    {% else %}
        {action_respond_info("PREHEAT: PLA FULL...")}

        SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=small_print VALUE=False
        
        SET_EXTRUDER_CONT TEMP=150                                                                                      # Set extruder temp to 150
        SET_BED_TEMPERATURE TEMP=60
        CG28                                                                                                            # Make sure the printer has been homed
        PARKBED                                                                                                         # Move the extruder to center of bed
        SET_IDLE_TIMEOUT TIMEOUT=10800                                                                                  # Set timeout to 3 hours
    {% endif %}

# [gcode_macro PREHEAT_PETG]
# description: Preheat PETG
# gcode:
#     {% if printer['print_stats'].state == 'printing' %}
#         {action_respond_info("PREHEAT: Printer is printing!!! Aborting!!!")}
#     {% else %}
#         {action_respond_info("PREHEAT: PETG...")}

#         SET_EXTRUDER_CONT TEMP=0                                                                                        # Set extruder temp to 0
#         INNER_HEATERBED TEMP=80                                                                                         # Set inner heater bed to 80
#         CG28                                                                                                            # Make sure the printer has been homed
#         PARKBED                                                                                                         # Move the extruder to center of bed
#         SET_IDLE_TIMEOUT TIMEOUT=10800                                                                                  # Set timeout to 3 hours
#     {% endif %}

#####################################################################
#   Nozzle Clean
#####################################################################

[gcode_macro CLEAN_NOZZLE]
variable_start_x: -9   ; Set this X distance so that it's at the right edge of the scrubber.
variable_start_y: 38  ; Set this Y distance so that the nozzle is above the rear row of bristles.
variable_start_z: 0   ; Set this Z distance so that the nozzle tip is buried in the scrubber.
variable_wipe_dist: -35
variable_wipe_qty: 5
variable_wipe_spd: 200
variable_raise_distance: 10

gcode:
 CG28
 
 G90                                            ; absolute positioning
 
#  STATUS_CLEANING

 ## Move nozzle to start position
 G1 X{start_x} Y{start_y} F6000
 G1 Z{start_z} F1500

 ## Wipe nozzle
 {% for wipes in range(1, (wipe_qty + 1)) %}
   G1 X{start_x} Y{start_y + wipe_dist} F{wipe_spd * 60}
   G1 X{start_x} Y{start_y} F{wipe_spd * 60}
   G1 X{start_x + 3} Y{start_y  + wipe_dist} F{wipe_spd * 60}
   G1 X{start_x + 3} Y{start_y} F{wipe_spd * 60}
 {% endfor %}

 ## Raise nozzle
 G1 X{start_x + 3} Z{raise_distance}

#############################################################################
#       PID TUNING MACROS
#############################################################################

[gcode_macro PID_Tune_EXTRUDER]
gcode:
    {% set temperature = params.TEMPERATURE|default(220) %}
    CG28
    M106 S153                                                                                                              # Sets Print Fans to 100%
    PID_CALIBRATE HEATER=extruder TARGET={temperature}
    SAVE_CONFIG

[gcode_macro PID_Tune_BED]
gcode:
    {% set temperature = params.TEMPERATURE|default(60) %}
    CG28
    M106 S153                                                                                                              # Sets Print Fans to 100%
    PID_CALIBRATE HEATER=heater_bed TARGET={temperature}
    SAVE_CONFIG

[gcode_macro PID_Tune_Outer_BED]
gcode:
    {% set temperature = params.TEMPERATURE|default(60) %}
    CG28
    M106 S153                                                                                                               # Sets Print Fans to 100%
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={temperature} 	                                                        # Heats Inner Zone at the same time for better tuning 
    PID_CALIBRATE HEATER=heater_bed_outer TARGET={temperature}
    SAVE_CONFIG

#####################################################################
#       MISC
#####################################################################

[gcode_macro ADJUST_Z_OFFSET]
description: Adjust the Z offset. Typically used for different plates. PERAMS: OS
gcode:
    {% set offset = params.OS|default(0)|float %}

    {% if offset == 0 %}
        {action_respond_info("Offset is 0! Not making any adjustments!") }
    {% else %}
        {action_respond_info("Adjusting offset by %.3fmm..." % (offset)) }
        SET_GCODE_OFFSET Z_ADJUST={offset} MOVE=1
    {% endif %}

[gcode_macro SET_BEACON_MODEL]
gcode:
    {% set bed_type = params.PLATE|default("smooth")|string %}

    {% if bed_type == "textured" %}
        {action_respond_info("Setting Beacon for TEXTURED plate")}
        BEACON_MODEL_SELECT NAME=textured
    {% else %}
        {action_respond_info("Setting Beacon for SMOOTH plate")}
        BEACON_MODEL_SELECT NAME=smooth
    {% endif %}

[gcode_macro POWER_OFF_PRINTER]
description: Power off the printer but leave the host running
gcode:
  {action_respond_info("POWER_OFF_PRINTER: Powering off steppers and lights...")}

  M84                                                                                                                   # Disable steppers
  TURN_OFF_HEATERS                                                                                                      # Turn off hotend and heater beds
  Part_Light_OFF                                                                                                        # Turn off extruder LED
  Frame_Light_OFF                                                                                                       # Turn off top bar LED

[gcode_macro WAIT]
description: Wait a specified number of seconds | Params: S
gcode:
    # Params
    {% set seconds = params.S|default(0)|int %}
    
    {% if seconds == 0 %}
        {action_respond_info("No amount of time was specifed! Not Waiting!") }
    {% else %}
        {action_respond_info("Waiting %.0f seconds..." % (seconds)) }

        G4 P{seconds * 1000}                                                                                            # Wait for provided time
    {% endif %}

[gcode_macro DUMP_PARAMETERS]
description: Dumps all Klipper parameters to the console. This helps to find Klipper system variables for use in macros | Params: None
gcode:
   {% for name1 in printer %}
      {% for name2 in printer[name1] %}
         { action_respond_info("printer['%s'].%s = %s" % (name1, name2, printer[name1][name2])) }
      {% else %}
         { action_respond_info("printer['%s'] = %s" % (name1, printer[name1])) }
      {% endfor %}
   {% endfor %}
   